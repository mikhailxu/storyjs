-# vim: set sw=2 ts=2 expandtab :

- uses :flickrapikey

- content_for :script do
  :plain
    Flickr = {};
    Flickr.Sign = function(request) {
      request = _.overlay({}, request, {
         api_key: "#{escape_javascript @flickr_api_key}"
      });
      var keys = Object.keys(request).sort();
      var signature_string = "#{escape_javascript @flickr_api_secret}";
      var querys = [];
      _.each(keys, function(key) {
        var value = request[key];
        signature_string += key;
        signature_string += value;
        querys.push(key + '=' + value);
      });
      var api_sig = hex_md5(signature_string);
      querys.push('api_sig=' + api_sig);
      return querys.join('&');
    }
    Story.Node.Define('Flickr', function(target, method, data, options) {
      this.ajax_options = options;
      this.target = target;
      this.data = data;
      this.method = method;
    }, {
      setup: function() {
        if(typeof this.data === 'function') this.data = this.data.call(this);

        this.xhr = jQuery.ajax(_.overlay({ 
          cache: true,
          url: 'http://api.flickr.com/services/rest/',
          data: Flickr.Sign(_.overlay({
            method: this.method,
            format: 'json'
          }, this.data || {})),
          dataType: 'jsonp',
          jsonp: false,
          jsonpCallback: 'jsonFlickrApi',
          success: Story.Bind(function(data, status) {
            this.xhr.abort();
            Story.Telling.scope(this.target).data = data;
            Story.Telling.scope(this.target).result = status;
            this.done = true;
            this.scope.story.update();
          }),
          error: Story.Bind(function(xhr, status) {
            debugger;
            Story.Telling.scope(this.target).result = status;
            this.done = true;
            this.scope.story.update();
          }),
          timeout: 1000*10
        }, this.ajax_options || {}));
      },
      update: function() {
        return !this.done;
      },
      teardown: function() {
        delete window.jsonFlickrApi;
        if(!this.done) {
          this.xhr.abort();
        }
      }
    });

- uses :dialog
-# = render :partial => 'dialog'

- content_for :templates do
  .dialog-content.test-dialog
    Testing
    .caption{:style=>'background: red'}

- content_for :script do
  :plain
    $('.dialog-content.test-dialog').defineTemplate('test-dialog', { 
      '.caption' : '.caption' 
    });

- content_for :head do
  %script{:src=>'game/bezier/b.js',:type=>'text/javascript'}

%p Testing
#test
  
- content_for :script do
  :plain 
    _layer.linkClasses();
    //new Dialog('test-dialog', {caption: 'world'}, function() {});
    //new Dialog('test-dialog', {caption: 'fffft'}, function() {});
    var model = new MVC({});
    $('#test').template(model, {
      '.a': '.a',
      '.b': '.b',
      '.action': '.action'
    });
    model.data('b', 'hello IE');
    DialogStory = Story(
      { setup: function() { 
      } },
      [ 
        Story.Dialog('test-dialog', {caption: 'hello'}, [
          { label:'ok',     action:'ok'},
          { label:'cancel', action:'cancel'}
        ]),
        function() { alert('dialog closed with: ' + this.scope.result); }
      ]
    );

    $('<button>dialog</button>')
    .click(function() {
      var story = DialogStory.tell();
      story.update();
    })
    .appendTo($('body'))

-# vim: set sw=2 ts=2 expandtab :
